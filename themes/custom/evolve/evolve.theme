<?php 
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;
use Drupal\node\Entity\Node;
use Drupal\taxonomy\Entity\Term;
use Drupal\file\Entity\File;
use Drupal\Core\Url;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\Core\Form;
use Drupal\Core\Form\FormBase;
use Drupal\Core\Language\LanguageInterface;
use Drupal\media\Entity\Media;

function evolve_preprocess_node(&$variables) {
	global $base_url;
	if(!empty($variables['node']) && isset($variables['node'])){
		$node = $variables['node'];
		if(!empty($node)){
			$node_id = $node->id();
			$variables['node_id'] = $node_id;
		}
	}
	if ($node instanceof \Drupal\node\NodeInterface) {
		if($node->getType() == 'article'){
			$query = \Drupal::entityQuery("node");
			$query->condition("type", "article");
			$query->condition("nid", $node_id,'!=');
			$query->sort('created', 'DESC');
			$query->accessCheck(TRUE);
			$results = $query->execute();
			$nodes = \Drupal\node\Entity\Node::loadMultiple($results);
			$blog_might = array();
			foreach ($nodes as $key => $val) {
				$title = !empty($val->get("title")->getValue()) ? $val->get("title")->getValue()[0]['value'] : '';
				$author = !empty($val->get("field_author")->getValue()) ? $val->get("field_author")->getValue()[0]['value'] : '';
				$short_description = !empty($val->get("field_short_description")->getValue()) ? $val->get("field_short_description")->getValue()[0]['value'] : '';
				$image = !empty($val->get("field_image")->getValue()) ? $val->get("field_image")->getValue()[0]['target_id'] : '';
				$article_img = \Drupal\file\Entity\File::load($image)->createFileUrl();
				$url_alias = Url::fromRoute('entity.node.canonical', ['node' => $val->id()])->toString();
				$blog_might[$key]['title'] = $title;
				$blog_might[$key]['author'] = $author;
				$blog_might[$key]['url_alias'] = $url_alias;
				$blog_might[$key]['article_img'] = $article_img;
			}
			$variables['blog_might'] = $blog_might;
		}
	}
	
}
?>